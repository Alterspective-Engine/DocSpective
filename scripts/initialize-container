#!/bin/bash

# DocSpective Container Reinitialization Script
# This script completely reinitializes the DocSpective development environment

set -e  # Exit on any error

echo "üîÑ DocSpective Container Reinitialization"
echo "========================================="

# Step 1: Stop containers and remove orphan images
echo "1Ô∏è‚É£  Stopping containers and removing orphan images..."
docker compose down --remove-orphans --rmi local || true

# Step 2: Delete persistent volumes
echo "2Ô∏è‚É£  Removing persistent volumes..."
echo "   - Removing Postgres data volume..."
docker volume rm docspective_supabase_db_data || true
echo "   - Removing storage data volume..."
docker volume rm docspective_supabase_storage_data || true
echo "   - Removing database config volume..."
docker volume rm docspective_db-config || true

# List any remaining volumes for reference
echo "   - Remaining DocSpective volumes:"
docker volume ls --filter name=docspective_ --format "table {{.Name}}\t{{.Driver}}" || true

# Step 3: Rebuild API image
echo "3Ô∏è‚É£  Rebuilding API image..."
docker compose build api --no-cache

# Optional: Rebuild other services if needed
# echo "   - Rebuilding all services..."
# docker compose build --no-cache

# Step 4: Start containers
echo "4Ô∏è‚É£  Starting containers..."
docker compose up -d

# Wait for services to be healthy
echo "‚è≥ Waiting for services to start..."
sleep 10

# Check service status
echo "üìä Service Status:"
docker compose ps --format "table {{.Name}}\t{{.Status}}\t{{.Ports}}"

# Verify API health
echo ""
echo "üè• Testing API health..."
sleep 5  # Give API a moment to fully start
if curl -s http://localhost:3001/api/health > /dev/null; then
    echo "‚úÖ API is healthy and responding"
    curl -s http://localhost:3001/api/health
else
    echo "‚ùå API health check failed"
    echo "API logs:"
    docker logs docspective-api --tail 20
fi

# Verify database buckets
echo ""
echo "ü™£ Checking storage buckets..."
if docker exec -i supabase-db psql -U postgres -d postgres -c "SELECT id,name,public FROM storage.buckets ORDER BY name;" 2>/dev/null; then
    echo "‚úÖ Storage buckets verified"
else
    echo "‚ùå Storage bucket check failed"
fi

echo ""
echo "üéâ Reinitialization complete!"
echo ""
echo "Available services:"
echo "  - API:          http://localhost:3001"
echo "  - API Docs:     http://localhost:3001/"
echo "  - API Health:   http://localhost:3001/api/health"
echo "  - API Upload:   http://localhost:3001/api/upload"
echo "  - Supabase Studio: http://localhost:3000"
echo "  - Kong Gateway: http://localhost:8000"
echo ""