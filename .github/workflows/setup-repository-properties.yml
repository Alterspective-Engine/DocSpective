name: Setup Repository Properties

on:
  workflow_dispatch:
    inputs:
      force_run:
        description: 'Force run even if properties exist'
        required: false
        default: false
        type: boolean

jobs:
  setup-properties:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Generate User Token for Copilot
        id: generate_user_token
        uses: actions/create-github-app-token@v1
        continue-on-error: true
        with:
          app-id: 1926973
          owner: ${{ github.repository_owner }}
          private-key: |
            -----BEGIN RSA PRIVATE KEY-----
            MIIEpAIBAAKCAQEAvYqSfVfTwQ3BeEgol2AEXGYkgJhs/JQfWZqWVKiKalpph1li
            PIe3kMo97zO33lWb4rFMS6V3ztI5AGHpNEPmzvcSmuQaxgCojBukQIjE+InP37Ko
            zZU5crppsKygft3l+8IqBk+byeBadbtBd1c60FdNZATVqWjspGy/8CzYjdA46X3m
            pTavliBbXQWb57N5r9Ol8d/LPomfnXaRwVxzde0Q9LELG9qp0co7+3YPxHbGHHTH
            QFHP4YE50cJFpJLUzfr+6kLcf5BhxhGSupDxo96Yd5sVeDrExpDphBPvra3vY8jL
            bRLYJKDGr1PXErd9KVDHwki/V3ceAOegM4iWRwIDAQABAoIBADbx0qFPMm1GRY1O
            raWkCd+XJIG6re1SKvxYmbeU2/sUln7L5HRTi10Ho4iR330uJ/BBITLUlrR3sFpy
            B55FCMV6TgRkl3ZKfpGO+cBTZXX+zSm1qsVdureNXlH+2M+uF5sxn+kQbsLIrLBw
            RfwIZ1450I9r71watG69r6458dS5xdsAfO4EOqVgKfRVjS8lA1+KyG9ybmacZVg0
            vOGISZiCbXU3HLpxG+gANc0sDhX8QJiHIIlx1dHIZvr4CEwBUriSAhER7g63Ho5G
            BkacKd/ihS3D2Q0JhPKpVjIu4diB4xqQhsXtZ8rRQvVn/vbaV/nuZUJmkvZTseac
            nenX0LECgYEA5Dx90QWx8xT1HypY/0ZTxghJm+omEwL+bj5snPuvW1i47WKAF29o
            3iW1SzMFRTn6a/dxcfZtSfBgIwO6m0FUpKhn4d3YiSc8nOcr6BHpB/SyAHsQftSl
            iHAtREVFoW3aeX5I1ag2TPfxZNgy9Z2vDAPVqh98UIw9OyMqZR89DfUCgYEA1JkU
            WhjHYBIYnyAcuy65mcZXWJ0nFeymVRJ45T7GTexDBBIyb1PA6q1LAV2cpi9BNy39
            vXhuP6kyOBjGstKUT6crGqKpq5knT55X9H5rRLHIdZgcbpQ9mAUF0f04tGYZUhm7
            /LBnZRdFvYr7MwYkZ7XLVJqG79G9PQmUh2VkUcsCgYEA0mtmv7+VaPuoZdxAAtHO
            yGO5oXJFOf/nnLIWpsBv0jLBA7JtT63aK/zt4O+f60vhsYqG37+G0MU5jO6SKzMX
            G1tbsuQ6D3DKNAn489MXWctiFIlhEt1v45MwWKHY6VSDOMGR2tFjhqCMwCGHEeUX
            jmc2pMq0bPpuNUhdfK9JNcUCgYEAqPoLHRl4zrlTbJbffz/CMaFeJ4axXFG+WvvV
            r5BXmfPhyEiWYboWKfEXHrzDF6uTkEIz3fbs2hinW8MFm3iYfT8HmaIUbdnLTxMy
            IZihtfYAuMbwQkv9MOk9GQzFl01XbtQZgNzNMaJvwhnHU2TcZrouJM611cPFP9Bv
            h7ZlKEUCgYAIL/jcDGu+U2BVYwRUHDPK04zBzVhSZN13ExsGm+J35VTdv+rMIZUQ
            c/5EGCC6BLFdztYzZJ2HD0k9YWZhrL3MHoW1BtXsY7x6KU9IWiet4nAu+n+JWnRP
            7J7voEI45xex6/SMMI7eBOKVFFXLV2B9XP7hyTzg3SVv4lOSYGR9jg==
            -----END RSA PRIVATE KEY-----
      
      - name: Debug Token Generation and Permissions
        run: |
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "App ID: 1926973"
          echo "Token generated: ${{ steps.generate_user_token.outputs.token != '' }}"
          echo "Token length: ${#GITHUB_TOKEN}"
          
          # Check what permissions this token has
          echo "Checking token permissions..."
          gh api /user --jq '{login: .login, type: .type}'
          
          # Try to check app installation permissions
          echo "Checking app installation..."
          gh api /repos/${{ github.repository }}/installation --jq '{id: .id, permissions: .permissions}' || echo "Failed to get installation permissions"
        env:
          GH_TOKEN: ${{ steps.generate_user_token.outputs.token || github.token }}
      
      - name: Check if properties already exist
        id: check_properties
        run: |
          echo "Checking if repository properties already exist..."
          
          # Use gh api to check for existing properties
          if gh api "/repos/${{ github.repository }}/properties/values" --jq '.[].property_name' | grep -q "role"; then
            echo "has_properties=true" >> $GITHUB_OUTPUT
            echo "✅ Found existing 'role' property - skipping setup"
          else
            echo "has_properties=false" >> $GITHUB_OUTPUT
            echo "❌ No 'role' property found - setup needed"
          fi
        env:
          GH_TOKEN: ${{ steps.generate_user_token.outputs.token || github.token }}
      

      - name: Set repository properties automatically
        if: steps.check_properties.outputs.has_properties == 'false' || github.event.inputs.force_run == 'true'
        run: |
          echo "Setting repository properties automatically..."
          
          # Determine the role - default to 'spec' for new repositories
          REPO_ROLE="spec"
          REPO_SPEC="null"
          
          echo "Setting properties:"
          echo "  role: $REPO_ROLE"
          echo "  spec: $REPO_SPEC"
          
          # Set the properties using GitHub API
          if gh api --method PATCH "/repos/${{ github.repository }}/properties/values" \
            -f properties='[{"property_name":"role","value":"'$REPO_ROLE'"},{"property_name":"spec","value":'$REPO_SPEC'}]'; then
            echo "✅ Successfully set repository properties"
            echo "Repository is configured as a specification repository (role=spec, spec=null)"
          else
            echo "❌ Failed to set repository properties"
            echo "This might be due to insufficient permissions or missing custom property definitions"
            echo "Please check that custom properties 'role' and 'spec' are defined in your organization settings"
            exit 1
          fi
        env:
          GH_TOKEN: ${{ steps.generate_user_token.outputs.token || github.token }}
